name: Run tests and Sonar on PR from test-all to test

on:
  push:
    branches:
      - main


jobs:
  test-and-sonar:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: harmonia
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Cache Sonar packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Make mvnw executable
        run: chmod +x ./mvnw

      - name: Wait for MySQL to be ready
        run: |
          echo "⏳ Waiting for MySQL..."
          for i in {1..30}; do
            if mysqladmin ping -h 127.0.0.1 -u root -proot --silent; then
              echo "✅ MySQL is up!"
              break
            fi
            echo "Still waiting for MySQL... ($i)"
            sleep 2
          done

      - name: Run tests & SonarQube analysis
        run: ./mvnw verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=AlexandreSama_Harmonia_API -Dsonar.organization=alexandresama -Dtest=!**/*Selenium*Test
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/harmonia
          SPRING_DATASOURCE_USERNAME: root
          SPRING_DATASOURCE_PASSWORD: root

      - name: Upload artifact (jar)
        uses: actions/upload-artifact@v4
        with:
          name: package-api.jar
          path: target/*.jar
          retention-days: 1
